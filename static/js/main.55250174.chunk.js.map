{"version":3,"sources":["components/User.tsx","components/CommentList.tsx","components/SearchPost.tsx","components/PostList.tsx","components/hooks/usePostList.ts","api/data.ts","App.tsx","useApp.ts","index.tsx"],"names":["User","name","email","address","className","href","street","suite","city","CommentList","comments","map","id","body","key","SearchPost","onSearch","query","value","onChange","event","htmlFor","PostList","props","posts","useState","setQuery","filteredQuery","setFilteredQuery","visiblePosts","useMemo","filter","post","title","toLowerCase","includes","setFilteredQueryWithDebounce","useCallback","debounce","handleSearch","target","usePostList","user","API_URL","getPreparedPosts","a","Promise","all","fetch","then","response","json","users","preparedPosts","find","userId","comment","postId","App","setPosts","isLoading","setLoading","isLoaded","setLoaded","loadPosts","data","useApp","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55250174.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\nexport const User: FC<User> = ({ name, email, address }) => {\n  return (\n    <section className=\"user post__user\">\n      <p className=\"user__name\">{name}</p>\n      <a href={`mailto:${email}`} className=\"user__email\">\n        {email}\n      </a>\n      <address className=\"user__address\">\n        <div>{`${address.street}, ${address.suite}`}</div>\n        <div>{address.city}</div>\n      </address>\n    </section>\n  );\n};\n","import React, { FC } from 'react';\n\nexport const CommentList: FC<Comments> = ({ comments }) => (\n  <>\n    {comments.map(({\n      id, name, body, email,\n    }) => (\n      <section className=\"post__comment\" key={id}>\n        <p className=\"comment__name\">{name}</p>\n        <p className=\"comment__body\">{body}</p>\n        <a href={`mailto:${email}`} className=\"comment__email\">\n          {email}\n        </a>\n      </section>\n    ))}\n  </>\n);\n","import React, { FC } from 'react';\n\nexport const SearchPost: FC<SearchPost> = ({ onSearch, query }) => {\n  return (\n    <div className=\"row\">\n      <form className=\"col s12\">\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <textarea\n              id=\"textarea1\"\n              value={query}\n              className=\"materialize-textarea\"\n              onChange={(event) => onSearch(event)}\n            />\n            <label htmlFor=\"textarea1\">\n              Type something to search post...\n            </label>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { User } from './User';\nimport { CommentList } from './CommentList';\nimport { SearchPost } from './SearchPost';\nimport { usePostList } from './hooks/usePostList';\n\nexport const PostList: FC<PostListProps> = (props) => {\n  const {\n    query,\n    handleSearch,\n    visiblePosts,\n  } = usePostList(props);\n\n  return (\n    <>\n      <SearchPost onSearch={handleSearch} query={query} />\n      <article className=\"app__post-list\">\n        {visiblePosts.map(({\n          id, title, user, body, comments,\n        }) => (\n          <section className=\"post\" key={id}>\n            <h5 className=\"post__title\">{title}</h5>\n            <p className=\"post__body\">{body}</p>\n            <User {...user} />\n            <p className=\"comment__heading\">Comments</p>\n            <CommentList comments={comments} />\n          </section>\n        ))}\n      </article>\n    </>\n  );\n};\n","import {\n  ChangeEvent, useCallback, useMemo, useState,\n} from 'react';\nimport debounce from 'lodash/debounce';\n\nexport const usePostList = ({ posts }: PostListProps) => {\n  const [query, setQuery] = useState('');\n  const [filteredQuery, setFilteredQuery] = useState('');\n\n  const visiblePosts = useMemo(() => {\n    const filteredPosts = [...posts].filter(post => {\n      const title = post.title.toLowerCase();\n      const body = post.body.toLowerCase();\n\n      return (title + body).includes(filteredQuery.toLowerCase());\n    });\n\n    return filteredPosts;\n  }, [posts, filteredQuery]);\n\n  const setFilteredQueryWithDebounce = useCallback(\n    debounce(setFilteredQuery, 1000),\n    [],\n  );\n\n  const handleSearch = useCallback(({ target }: ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = target;\n\n    setQuery(value);\n    setFilteredQueryWithDebounce(value);\n  }, [setFilteredQueryWithDebounce]);\n\n  return {\n    handleSearch,\n    query,\n    visiblePosts,\n  };\n};\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nconst getPosts = () => {\n  return fetch(`${API_URL}/posts`)\n    .then(response => response.json());\n};\n\nconst getUsers = () => {\n  return fetch(`${API_URL}/users`)\n    .then(response => response.json());\n};\n\nconst getComments = () => {\n  return fetch(`${API_URL}/comments`)\n    .then(response => response.json());\n};\n\nexport const getPreparedPosts = async () => {\n  const [posts, users, comments] = await Promise.all(\n    [getPosts(), getUsers(), getComments()],\n  );\n\n  const preparedPosts = posts.map((post: Post) => ({\n    ...post,\n    user: users.find((user: User) => user.id === post.userId),\n    comments: comments.filter((comment: Comment) => comment.postId === post.id),\n  }));\n\n  return preparedPosts;\n};\n","import React from 'react';\nimport './App.scss';\nimport { PostList } from './components/PostList';\nimport { useApp } from './useApp';\n\nconst App = () => {\n  const {\n    posts,\n    isLoaded,\n    isLoading,\n    loadPosts,\n  } = useApp();\n\n  return (\n    <main className=\"app\">\n      <div className=\"app__header\">\n        <h2 className=\"app__heading\">Dynamic list of posts</h2>\n        {!isLoading && !isLoaded\n        && (\n          <button\n            type=\"button\"\n            className=\"waves-effect waves-light btn deep-purple accent-3\"\n            onClick={loadPosts}\n          >\n            load data\n          </button>\n        )}\n        {isLoading && <p>Loading...</p>}\n      </div>\n      {isLoaded && <PostList posts={posts} />}\n    </main>\n  );\n};\n\nexport default App;\n","import { useCallback, useState } from 'react';\nimport { getPreparedPosts } from './api/data';\n\nexport const useApp = () => {\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const loadPosts = useCallback(() => {\n    setLoading(true);\n\n    getPreparedPosts()\n      .then(data => setPosts(data));\n\n    setLoading(false);\n    setLoaded(true);\n  }, []);\n\n  return {\n    posts,\n    isLoaded,\n    isLoading,\n    loadPosts,\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}